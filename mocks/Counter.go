// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	io_prometheus_client "github.com/prometheus/client_model/go"
	mock "github.com/stretchr/testify/mock"

	prometheus "github.com/prometheus/client_golang/prometheus"
)

// Counter is an autogenerated mock type for the Counter type
type Counter struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m *Counter) Add(_a0 float64) {
	_m.Called(_a0)
}

// Collect provides a mock function with given fields: _a0
func (_m *Counter) Collect(_a0 chan<- prometheus.Metric) {
	_m.Called(_a0)
}

// Desc provides a mock function with given fields:
func (_m *Counter) Desc() *prometheus.Desc {
	ret := _m.Called()

	var r0 *prometheus.Desc
	if rf, ok := ret.Get(0).(func() *prometheus.Desc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*prometheus.Desc)
		}
	}

	return r0
}

// Describe provides a mock function with given fields: _a0
func (_m *Counter) Describe(_a0 chan<- *prometheus.Desc) {
	_m.Called(_a0)
}

// Inc provides a mock function with given fields:
func (_m *Counter) Inc() {
	_m.Called()
}

// Write provides a mock function with given fields: _a0
func (_m *Counter) Write(_a0 *io_prometheus_client.Metric) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*io_prometheus_client.Metric) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
